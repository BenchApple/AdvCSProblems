Benjamin Chappell


PseudoCode:

matchingIndex(array[start..end])
    if (start > end)
        return false
    else
        m = (start + end) / 2
        if (array[m] == m)
            return true
        else if (array[m] > m)
            return matchingIndex(array[start..m-1])
        else if (array[m] < m)
            return matchingIndex(array[m+1..end])
            
            
If the array is empty, return false, as there are no elements to fulfill the requirements.
If the middle element is equal to its index, return true, and this element is the element we want.
If the middle element is greater than its index, return the result of the algorithm on the first half of the array,
as there are no duplicates, so it would be impossible for the element that we desire to be in the second half of the array.
If the middle element is less than its index, return the result of the algorithm on the second half of the array, 
as it would be impossible for the element that we want to be in the first half of the array. Therefore, the entire algorithm is correct.
